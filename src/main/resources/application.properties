
# 1. Configuração da Conexão com o Banco H2 (em memória)
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# 2. Configuração do Comportamento do JPA/Hibernate
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# 3. Habilitação de Ferramentas Auxiliares (Console do H2)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# ===============================================
# CONFIGURAÇÃO DE SEGURANÇA JWT
# ===============================================
# Chave secreta para assinar os tokens JWT.
# IMPORTANTE: Em um projeto real, esta chave deve ser muito mais longa e complexa,
# e NUNCA deve ser commitada diretamente no código. Use variáveis de ambiente.
# Para gerar uma chave segura, você pode usar um gerador online (ex: Base64 encode).
security.jwt.secret-key=4D6251655468576D5A7134743777217A25432A462D4A614E645267556B587032

# Tempo de expiração do token em milissegundos.
# Ex: 86400000ms = 24 horas
security.jwt.expiration-time=86400000


# ===============================================
# CONFIGURAÇÃO DE ARMAZENAMENTO DE FICHEIROS
# ===============================================
# Diretório local para guardar os ficheiros de upload.
# 'uploads' significa que será criada uma pasta na raiz do projeto.
# NOTA: Para produção, este caminho deve ser absoluto e fora da pasta da aplicação.
storage.local.directory=uploads